version: '3'

services:
  nginx:
    build: ./docker/nginx
    networks:
      manager:
        aliases:
          - nginx
          - manager.hm
    ports:
      - ${PUB_HTTP_PORT}:80
      - ${PUB_HTTPS_PORT}:443
    volumes:
      - ./docker/nginx/ssl:/etc/nginx/ssl
  psql:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgress
      - POSTGRES_DB=postgres
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      manager:
        aliases:
          - psql
          - database
  psql-test:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgress
      - POSTGRES_DB=postgres
    volumes:
      - ./pgdata:/var/lib/postgresql/test-data
    ports:
      - '5433:5432'
    networks:
      manager:
        aliases:
          - psql-test
          - database-test
  minio:
    image: minio/minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ./miniodata:/data
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=qwerty123
    command: server --console-address ":9001" /data
    networks:
      manager:
        aliases:
          - minio
  api-gateway:
    build:
      context: ${WORKDIR}/api-gateway
      dockerfile: ./Dockerfile
      args:
        build_env: devel
    networks:
      manager:
        aliases:
          - api-gateway
          - gateway
  team-data:
    build:
      context: ${WORKDIR}/team-data
      dockerfile: ./docker/Dockerfile
      args:
        build_env: devel
    networks:
      manager:
        aliases:
          - team-data
          - team-service
    environment:
      XDEBUG_PORT: 9000
      XDEBUG_HOST: 127.0.0.1
      XDEBUG_IDKEY: DEFKEY
    volumes:
      - ${WORKDIR}/team-data:/var/www
  project-data:
    build:
      context: ${WORKDIR}/project-data
      dockerfile: ./docker/Dockerfile
      args:
        build_env: devel
    networks:
      manager:
        aliases:
          - project-data
          - project-service
    environment:
      XDEBUG_PORT: 9000
      XDEBUG_HOST: 127.0.0.1
      XDEBUG_IDKEY: DEFKEY
    volumes:
      - ${WORKDIR}/project-data:/var/www
  site-data:
    build:
      context: ${WORKDIR}/site-data
      dockerfile: ./docker/Dockerfile
      args:
        build_env: devel
    networks:
      manager:
        aliases:
          - site-data
          - site-service
    environment:
      XDEBUG_PORT: 9000
      XDEBUG_HOST: 127.0.0.1
      XDEBUG_IDKEY: DEFKEY
    volumes:
      - ${WORKDIR}/site-data:/var/www
  idm-data:
    build:
      context: ${WORKDIR}/idm-data
      dockerfile: ./docker/Dockerfile
      args:
        build_env: devel
    networks:
      manager:
        aliases:
          - idm-data
          - idm-service
    environment:
      XDEBUG_PORT: 9000
      XDEBUG_HOST: 127.0.0.1
      XDEBUG_IDKEY: DEFKEY
    volumes:
      - ${WORKDIR}/idm-data:/var/www
#  manager-front:
#    build:
#      context: ${WORKDIR}/manager-front
#      dockerfile: ./docker/Dockerfile
#      args:
#        build_env: devel
#    networks:
#      default:
#        aliases:
#          - manager-front
#    entrypoint: sh -c "yarn global add pm2 env-cmd && env-cmd -e developer yarn serve"
#    environment:
#      PORT: "3000"
#    volumes:
#      - ${WORKDIR}/manager-front:/var/www

networks:
  manager: